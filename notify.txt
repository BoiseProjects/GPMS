// Added Investigators Notify
			NotificationLog notification = new NotificationLog();
			InvestigatorRefAndPosition addedPI = addedInvestigators.getPi();
			String projectTitle = currentProposal.getProjectInfo()
					.getProjectTitle();
			if (addedPI.getUserRef().getId() != null) {
				notification = new NotificationLog();

				notification.setType("Investigator");
				notification
						.setAction("Added as PI by " + authorUserName + ".");
				notification.setProposalId(currentProposal.getId().toString());
				notification.setProposalTitle(projectTitle);
				notification.setUserProfileId(addedPI.getUserProfileId());
				notification.setUsername(addedPI.getUserRef().getUserAccount()
						.getUserName());
				notification.setCollege(addedPI.getCollege());
				notification.setDepartment(addedPI.getDepartment());
				notification.setPositionType(addedPI.getPositionType());
				notification.setPositionTitle(addedPI.getPositionTitle());
				notificationDAO.save(notification);
			}

			for (InvestigatorRefAndPosition copi : addedInvestigators
					.getCo_pi()) {
				notification = new NotificationLog();
				notification.setType("Investigator");
				notification.setAction("Added as CO-PI by " + authorUserName
						+ ".");
				notification.setProposalId(currentProposal.getId().toString());
				notification.setProposalTitle(projectTitle);
				notification.setUserProfileId(copi.getUserProfileId());
				notification.setUsername(copi.getUserRef().getUserAccount()
						.getUserName());
				notification.setCollege(copi.getCollege());
				notification.setDepartment(copi.getDepartment());
				notification.setPositionType(copi.getPositionType());
				notification.setPositionTitle(copi.getPositionTitle());
				notificationDAO.save(notification);
			}

			for (InvestigatorRefAndPosition senior : addedInvestigators
					.getSeniorPersonnel()) {
				notification = new NotificationLog();
				notification.setType("Investigator");
				notification.setAction("Added as Senior Personnel by "
						+ authorUserName + ".");
				notification.setProposalId(currentProposal.getId().toString());
				notification.setProposalTitle(projectTitle);
				notification.setUserProfileId(senior.getUserProfileId());
				notification.setUsername(senior.getUserRef().getUserAccount()
						.getUserName());
				notification.setCollege(senior.getCollege());
				notification.setDepartment(senior.getDepartment());
				notification.setPositionType(senior.getPositionType());
				notification.setPositionTitle(senior.getPositionTitle());
				notificationDAO.save(notification);
			}

			// Deleted Users Notify
			InvestigatorRefAndPosition deletedPI = deletedInvestigators.getPi();
			if (!deletedPI.getUserProfileId().equals("")) {
				notification = new NotificationLog();

				notification.setType("Investigator");
				notification.setAction("Deleted as PI by " + authorUserName
						+ ".");
				notification.setProposalId(currentProposal.getId().toString());
				notification.setProposalTitle(projectTitle);
				notification.setUserProfileId(deletedPI.getUserProfileId());
				notification.setUsername(deletedPI.getUserRef()
						.getUserAccount().getUserName());
				notification.setCollege(deletedPI.getCollege());
				notification.setDepartment(deletedPI.getDepartment());
				notification.setPositionType(deletedPI.getPositionType());
				notification.setPositionTitle(deletedPI.getPositionTitle());
				notification.setCritical(true);
				notificationDAO.save(notification);
			}

			for (InvestigatorRefAndPosition copi : deletedInvestigators
					.getCo_pi()) {
				notification = new NotificationLog();
				notification.setType("Investigator");
				notification.setAction("Deleted as CO-PI by " + authorUserName
						+ ".");
				notification.setProposalId(currentProposal.getId().toString());
				notification.setProposalTitle(projectTitle);
				notification.setUserProfileId(copi.getUserProfileId());
				notification.setUsername(copi.getUserRef().getUserAccount()
						.getUserName());
				notification.setCollege(copi.getCollege());
				notification.setDepartment(copi.getDepartment());
				notification.setPositionType(copi.getPositionType());
				notification.setPositionTitle(copi.getPositionTitle());
				notification.setCritical(true);
				notificationDAO.save(notification);
			}

			for (InvestigatorRefAndPosition senior : deletedInvestigators
					.getSeniorPersonnel()) {
				notification = new NotificationLog();
				notification.setType("Investigator");
				notification.setAction("Deleted as Senior Personnel by "
						+ authorUserName + ".");
				notification.setProposalId(currentProposal.getId().toString());
				notification.setProposalTitle(projectTitle);
				notification.setUserProfileId(senior.getUserProfileId());
				notification.setUsername(senior.getUserRef().getUserAccount()
						.getUserName());
				notification.setCollege(senior.getCollege());
				notification.setDepartment(senior.getDepartment());
				notification.setPositionType(senior.getPositionType());
				notification.setPositionTitle(senior.getPositionTitle());
				notification.setCritical(true);
				notificationDAO.save(notification);
			}

			// New Signatures Notify
			if (addedSignatures.size() != 0) {
				for (SignatureInfo signatureInfo : addedSignatures) {
					String signFullName = signatureInfo.getFullName();
					String position = signatureInfo.getPositionTitle();
					// Date signedDate = signatureInfo.getSignedDate();
					notification = new NotificationLog();
					notification.setType("Signature");
					notification.setAction("Signed by " + signFullName + " as "
							+ position + ".");

					notification.setProposalId(currentProposal.getId()
							.toString());
					notification.setProposalTitle(projectTitle);
					notification.setForAdmin(true);
					notificationDAO.save(notification);

					notification = new NotificationLog();
					notification.setType("Signature");
					notification.setAction("Signed by " + signFullName + " as "
							+ position + ".");
					notification.setProposalId(currentProposal.getId()
							.toString());
					notification.setProposalTitle(projectTitle);
					notification.setUserProfileId(currentProposal
							.getInvestigatorInfo().getPi().getUserProfileId());
					notification.setUsername(currentProposal
							.getInvestigatorInfo().getPi().getUserRef()
							.getUserAccount().getUserName());
					notification.setCollege(currentProposal
							.getInvestigatorInfo().getPi().getCollege());
					notification.setDepartment(currentProposal
							.getInvestigatorInfo().getPi().getDepartment());
					notification.setPositionType(currentProposal
							.getInvestigatorInfo().getPi().getPositionType());
					notification.setPositionTitle(currentProposal
							.getInvestigatorInfo().getPi().getPositionTitle());
					notificationDAO.save(notification);

					for (InvestigatorRefAndPosition copi : currentProposal
							.getInvestigatorInfo().getCo_pi()) {
						notification = new NotificationLog();
						notification.setType("Signature");
						notification.setAction("Signed by " + signFullName
								+ " as " + position + ".");
						notification.setProposalId(currentProposal.getId()
								.toString());
						notification.setProposalTitle(projectTitle);
						notification.setUserProfileId(copi.getUserProfileId());
						notification.setUsername(copi.getUserRef()
								.getUserAccount().getUserName());
						notification.setCollege(copi.getCollege());
						notification.setDepartment(copi.getDepartment());
						notification.setPositionType(copi.getPositionType());
						notification.setPositionTitle(copi.getPositionTitle());
						notificationDAO.save(notification);
					}

					for (InvestigatorRefAndPosition senior : currentProposal
							.getInvestigatorInfo().getSeniorPersonnel()) {
						notification = new NotificationLog();
						notification.setType("Signature");
						notification.setAction("Signed by " + signFullName
								+ " as " + position + ".");
						notification.setProposalId(currentProposal.getId()
								.toString());
						notification.setProposalTitle(projectTitle);
						notification
								.setUserProfileId(senior.getUserProfileId());
						notification.setUsername(senior.getUserRef()
								.getUserAccount().getUserName());
						notification.setCollege(senior.getCollege());
						notification.setDepartment(senior.getDepartment());
						notification.setPositionType(senior.getPositionType());
						notification
								.setPositionTitle(senior.getPositionTitle());
						notificationDAO.save(notification);
					}
				}
			}
			
			